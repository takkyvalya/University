import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

# 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df = pd.read_csv("c:/Users/vtakk/OneDrive/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç/3 –∫—É—Ä—Å/–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö/–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è 1/ML1ext/insurance_miptstats.csv")
print("üîç –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã:")
print(df.head())

# 2. –í—ã–±–æ—Ä –ø—Ä–∏–∑–Ω–∞–∫–æ–≤: bmi -> charges
X = df["bmi"].values.reshape(-1, 1)
y = df["charges"].values

# 3. –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –æ–±—É—á–∞—é—â—É—é –∏ —Ç–µ—Å—Ç–æ–≤—É—é –≤—ã–±–æ—Ä–∫—É
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 4. –õ–∏–Ω–µ–π–Ω–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è —Å –ø–æ–º–æ—â—å—é scikit-learn
model = LinearRegression()
model.fit(X_train, y_train)
y_pred_sklearn = model.predict(X_test)

print("\nüìå Scikit-learn –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã:")
print(f"  –£–≥–ª–æ–≤–æ–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç (slope): {model.coef_[0]}")
print(f"  –°–º–µ—â–µ–Ω–∏–µ (intercept): {model.intercept_}")

# 5. –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ú–ù–ö
def least_squares(x, y):
    x_mean = np.mean(x)
    y_mean = np.mean(y)
    m = np.sum((x - x_mean) * (y - y_mean)) / np.sum((x - x_mean)**2)
    b = y_mean - m * x_mean
    return m, b

m_custom, b_custom = least_squares(X_train.flatten(), y_train)
y_pred_custom = m_custom * X_test.flatten() + b_custom

print("\nüìå –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ú–ù–ö:")
print(f"  –£–≥–ª–æ–≤–æ–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç (slope): {m_custom}")
print(f"  –°–º–µ—â–µ–Ω–∏–µ (intercept): {b_custom}")

# 6. –ì—Ä–∞—Ñ–∏–∫
plt.figure(figsize=(10, 5))
plt.scatter(X_test, y_test, color="blue", label="–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
plt.plot(X_test, y_pred_sklearn, color="red", label="Scikit-learn –ª–∏–Ω–∏—è")
plt.plot(X_test, y_pred_custom, color="green", linestyle="--", label="–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏–Ω–∏—è")
plt.xlabel("BMI")
plt.ylabel("Charges")
plt.legend()
plt.title("–õ–∏–Ω–µ–π–Ω–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è: BMI -> Charges")
plt.grid(True)
plt.show()

# 7. –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
results = pd.DataFrame({
    "BMI": X_test.flatten(),
    "y_true (charges)": y_test,
    "y_pred_sklearn": y_pred_sklearn,
    "y_pred_custom": y_pred_custom
})

print("\nüìä –¢–∞–±–ª–∏—Ü–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫):")
print(results.head(10))
